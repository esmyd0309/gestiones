{"version":3,"sources":["../../src/ts/filter/provided/date/dateFilter.ts"],"names":[],"mappings":"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","file":"dateFilter.js","sourcesContent":["import { IDateParams } from \"../../../rendering/dateComponent\";\nimport { RefSelector } from \"../../../widgets/componentAnnotations\";\nimport { Autowired } from \"../../../context/context\";\nimport { UserComponentFactory } from \"../../../components/framework/userComponentFactory\";\nimport { _ } from \"../../../utils\";\nimport { DateCompWrapper } from \"./dateCompWrapper\";\nimport { ConditionPosition, ISimpleFilterModel, SimpleFilter } from \"../simpleFilter\";\nimport { Comparator, IScalarFilterParams, ScalerFilter } from \"../scalerFilter\";\n\n// the date filter model is a bit different, it takes strings, although the\n// filter actually works with dates. this is because a Date object won't convert\n// easily to JSON. so when the model is used for doing the filtering, it's converted\n// to Date objects.\nexport interface DateFilterModel extends ISimpleFilterModel {\n    dateFrom: string;\n    dateTo: string;\n}\n\nexport interface IDateFilterParams extends IScalarFilterParams {\n    comparator?: IDateComparatorFunc;\n    browserDatePicker?: boolean;\n}\n\nexport interface IDateComparatorFunc {\n    (filterLocalDateAtMidnight: Date, cellValue: any): number;\n}\n\nexport class DateFilter extends ScalerFilter<DateFilterModel, Date> {\n\n    private static readonly FILTER_TYPE = 'date';\n\n    public static DEFAULT_FILTER_OPTIONS = [\n        ScalerFilter.EQUALS,\n        ScalerFilter.GREATER_THAN,\n        ScalerFilter.LESS_THAN,\n        ScalerFilter.NOT_EQUAL,\n        ScalerFilter.IN_RANGE\n    ];\n\n    @RefSelector('ePanelFrom1') private ePanelFrom1: HTMLElement;\n    @RefSelector('ePanelFrom2') private ePanelFrom2: HTMLElement;\n\n    @RefSelector('ePanelTo1') private ePanelTo1: HTMLElement;\n    @RefSelector('ePanelTo2') private ePanelTo2: HTMLElement;\n\n    private dateCompFrom1: DateCompWrapper;\n    private dateCompFrom2: DateCompWrapper;\n    private dateCompTo1: DateCompWrapper;\n    private dateCompTo2: DateCompWrapper;\n\n    @Autowired('userComponentFactory')\n    private userComponentFactory: UserComponentFactory;\n\n    private dateFilterParams: IDateFilterParams;\n\n    protected mapRangeFromModel(filterModel: DateFilterModel): { from: Date, to: Date } {\n        // unlike the other filters, we do two things here:\n        // 1) allow for different attribute names (same as done for other filters) (eg the 'from' and 'to'\n        //    are in different locations in Date and Number filter models)\n        // 2) convert the type (cos Date filter uses Dates, however model is 'string')\n        //\n        // NOTE: The conversion of string to date also removes the timezone - ie when user picks\n        //       a date form the UI, it will have timezone info in it. This is lost when creating\n        //       the model. Then when we recreate the date again here, it's without timezone.\n        const from = _.getDateFromString(filterModel.dateFrom);\n        const to = _.getDateFromString(filterModel.dateTo);\n\n        return {\n            from,\n            to\n        };\n    }\n\n    protected setValueFromFloatingFilter(value: string): void {\n        if (value != null) {\n            const dateFrom = _.getDateFromString(value);\n            this.dateCompFrom1.setDate(dateFrom);\n        } else {\n            this.dateCompFrom1.setDate(null);\n        }\n\n        this.dateCompTo1.setDate(null);\n        this.dateCompFrom2.setDate(null);\n        this.dateCompTo2.setDate(null);\n    }\n\n    protected setConditionIntoUi(model: DateFilterModel, position: ConditionPosition): void {\n        const positionOne = position === ConditionPosition.One;\n\n        const dateFromString = model ? model.dateFrom : null;\n        const dateToString = model ? model.dateTo : null;\n\n        const dateFrom = _.getDateFromString(dateFromString);\n        const dateTo = _.getDateFromString(dateToString);\n\n        const compFrom = positionOne ? this.dateCompFrom1 : this.dateCompFrom2;\n        const compTo = positionOne ? this.dateCompTo1 : this.dateCompTo2;\n\n        compFrom.setDate(dateFrom);\n        compTo.setDate(dateTo);\n    }\n\n    protected resetUiToDefaults(silent?: boolean): void {\n        super.resetUiToDefaults(silent);\n\n        this.dateCompTo1.setDate(null);\n        this.dateCompTo2.setDate(null);\n        this.dateCompFrom1.setDate(null);\n        this.dateCompFrom2.setDate(null);\n    }\n\n    protected comparator(): Comparator<Date> {\n        return this.dateFilterParams.comparator ? this.dateFilterParams.comparator : this.defaultComparator.bind(this);\n    }\n\n    private defaultComparator(filterDate: Date, cellValue: any): number {\n        //The default comparator assumes that the cellValue is a date\n        const cellAsDate = cellValue as Date;\n\n        if (cellAsDate < filterDate) { return -1; }\n        if (cellAsDate > filterDate) { return 1; }\n\n        return cellValue != null ? 0 : -1;\n    }\n\n    protected setParams(params: IDateFilterParams): void {\n        super.setParams(params);\n\n        this.dateFilterParams = params;\n\n        this.createDateComponents();\n    }\n\n    private createDateComponents(): void {\n        // params to pass to all four date comps\n        const dateComponentParams: IDateParams = {\n            onDateChanged: () => this.onUiChanged(),\n            filterParams: this.dateFilterParams\n        };\n\n        this.dateCompFrom1 = new DateCompWrapper(this.userComponentFactory, dateComponentParams, this.ePanelFrom1);\n        this.dateCompFrom2 = new DateCompWrapper(this.userComponentFactory, dateComponentParams, this.ePanelFrom2);\n        this.dateCompTo1 = new DateCompWrapper(this.userComponentFactory, dateComponentParams, this.ePanelTo1);\n        this.dateCompTo2 = new DateCompWrapper(this.userComponentFactory, dateComponentParams, this.ePanelTo2);\n\n        this.addDestroyFunc(() => {\n            this.dateCompFrom1.destroy();\n            this.dateCompFrom2.destroy();\n            this.dateCompTo1.destroy();\n            this.dateCompTo2.destroy();\n        });\n    }\n\n    protected getDefaultFilterOptions(): string[] {\n        return DateFilter.DEFAULT_FILTER_OPTIONS;\n    }\n\n    protected createValueTemplate(position: ConditionPosition): string {\n        const positionOne = position === ConditionPosition.One;\n        const pos = positionOne ? '1' : '2';\n\n        return `<div class=\"ag-filter-body\" ref=\"eCondition${pos}Body\">\n                    <div class=\"ag-filter-from ag-filter-date-from\" ref=\"ePanelFrom${pos}\">\n                    </div>\n                    <div class=\"ag-filter-to ag-filter-date-to\" ref=\"ePanelTo${pos}\"\">\n                    </div>\n                </div>`;\n    }\n\n    protected isConditionUiComplete(position: ConditionPosition): boolean {\n        const positionOne = position === ConditionPosition.One;\n        const option = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n        const compFrom = positionOne ? this.dateCompFrom1 : this.dateCompFrom2;\n        const compTo = positionOne ? this.dateCompTo1 : this.dateCompTo2;\n        const valueFrom = compFrom.getDate();\n        const valueTo = compTo.getDate();\n\n        if (option === SimpleFilter.EMPTY) { return false; }\n\n        if (this.doesFilterHaveHiddenInput(option)) {\n            return true;\n        }\n\n        if (option === SimpleFilter.IN_RANGE) {\n            return valueFrom != null && valueTo != null;\n        }\n\n        return valueFrom != null;\n    }\n\n    protected areSimpleModelsEqual(aSimple: DateFilterModel, bSimple: DateFilterModel): boolean {\n        return aSimple.dateFrom === bSimple.dateFrom\n            && aSimple.dateTo === bSimple.dateTo\n            && aSimple.type === bSimple.type;\n    }\n\n    // needed for creating filter model\n    protected getFilterType(): string {\n        return DateFilter.FILTER_TYPE;\n    }\n\n    protected createCondition(position: ConditionPosition): DateFilterModel {\n        const positionOne = position === ConditionPosition.One;\n        const type = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n\n        const dateCompFrom = positionOne ? this.dateCompFrom1 : this.dateCompFrom2;\n        const dateCompTo = positionOne ? this.dateCompTo1 : this.dateCompTo2;\n\n        const dateFrom = dateCompFrom.getDate();\n        const dateTo = dateCompTo.getDate();\n\n        return {\n            dateFrom: `${_.serializeDateToYyyyMmDd(dateFrom, \"-\")} ${_.getTimeFromDate(dateFrom)}`,\n            dateTo: `${_.serializeDateToYyyyMmDd(dateTo, \"-\")} ${_.getTimeFromDate(dateTo)}`,\n            type: type,\n            filterType: DateFilter.FILTER_TYPE\n        };\n    }\n\n    private resetPlaceholder(): void {\n        const translate = this.translate.bind(this);\n        const isRange1 = this.getCondition1Type() === ScalerFilter.IN_RANGE;\n        const isRange2 = this.getCondition2Type() === ScalerFilter.IN_RANGE;\n\n        this.dateCompFrom1.setInputPlaceholder(translate(isRange1 ? 'rangeStart' : 'filterOoo'));\n        this.dateCompTo1.setInputPlaceholder(translate(isRange1 ? 'rangeEnd' : 'filterOoo'));\n\n        this.dateCompFrom2.setInputPlaceholder(translate(isRange2 ? 'rangeStart' : 'filterOoo'));\n        this.dateCompTo2.setInputPlaceholder(translate(isRange2 ? 'rangeEnd' : 'filterOoo'));\n    }\n\n    protected updateUiVisibility(): void {\n        super.updateUiVisibility();\n\n        this.resetPlaceholder();\n\n        const showFrom1 = this.showValueFrom(this.getCondition1Type());\n        _.setDisplayed(this.ePanelFrom1, showFrom1);\n\n        const showTo1 = this.showValueTo(this.getCondition1Type());\n        _.setDisplayed(this.ePanelTo1, showTo1);\n\n        const showFrom2 = this.showValueFrom(this.getCondition2Type());\n        _.setDisplayed(this.ePanelFrom2, showFrom2);\n\n        const showTo2 = this.showValueTo(this.getCondition2Type());\n        _.setDisplayed(this.ePanelTo2, showTo2);\n\n    }\n}"]}