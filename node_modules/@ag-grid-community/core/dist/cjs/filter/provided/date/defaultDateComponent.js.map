{"version":3,"sources":["../../src/ts/filter/provided/date/defaultDateComponent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oDAAqD;AAErD,wDAAuD;AAGvD,8EAAoE;AACpE,wCAAmC;AAEnC;IAA0C,wCAAS;IAO/C;eACI,kBAAM,+HAAyH,CAAC;IACpI,CAAC;IAEM,mCAAI,GAAX,UAAY,MAAmB;QAA/B,iBAkBC;QAjBG,IAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC;QAC9D,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,SAAS,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC,CAAC;QAE9E,IAAI,SAAC,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAE;YACvF,IAAI,SAAC,CAAC,WAAW,EAAE,EAAE;gBACjB,OAAO,CAAC,IAAI,CAAC,wHAAwH,CAAC,CAAC;aAC1I;iBAAM;gBACF,IAAI,CAAC,UAAU,CAAC,eAAe,EAAuB,CAAC,IAAI,GAAG,MAAM,CAAC;aACzE;SACJ;QAED,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,aAAa,CAAC;QAErC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,EAAE,OAAO,EAAE,UAAC,CAAC;YAC3E,IAAI,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,aAAa,EAAE;gBAAE,OAAO;aAAE;YACpD,KAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,sCAAO,GAAd;QACI,OAAO,SAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC3D,CAAC;IAEM,sCAAO,GAAd,UAAe,IAAU;QACrB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAC,CAAC,uBAAuB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;IACnE,CAAC;IAEM,kDAAmB,GAA1B,UAA2B,WAAmB;QAC1C,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;IACrD,CAAC;IAvCgC;QAAhC,mBAAS,CAAC,oBAAoB,CAAC;oEAAgD;IACrD;QAA1B,kCAAW,CAAC,YAAY,CAAC;4DAAsC;IAwCpE,2BAAC;CA3CD,AA2CC,CA3CyC,qBAAS,GA2ClD;AA3CY,oDAAoB","file":"defaultDateComponent.js","sourcesContent":["import { Autowired } from \"../../../context/context\";\nimport { AgInputTextField } from \"../../../widgets/agInputTextField\";\nimport { Component } from \"../../../widgets/component\";\nimport { GridOptionsWrapper } from \"../../../gridOptionsWrapper\";\nimport { IDateComp, IDateParams } from \"../../../rendering/dateComponent\";\nimport { RefSelector } from \"../../../widgets/componentAnnotations\";\nimport { _ } from \"../../../utils\";\n\nexport class DefaultDateComponent extends Component implements IDateComp {\n\n    @Autowired('gridOptionsWrapper') private gridOptionsWrapper: GridOptionsWrapper;\n    @RefSelector('eDateInput') private eDateInput: AgInputTextField;\n\n    private listener: () => void;\n\n    constructor() {\n        super(`<div class=\"ag-filter-filter\"><ag-input-text-field class=\"ag-date-filter\" ref=\"eDateInput\"></ag-input-text-field></div>`);\n    }\n\n    public init(params: IDateParams): void {\n        const translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        this.eDateInput.setInputPlaceholder(translate('dateFormatOoo', 'yyyy-mm-dd'));\n\n        if (_.isBrowserChrome() || (params.filterParams && params.filterParams.browserDatePicker)) {\n            if (_.isBrowserIE()) {\n                console.warn('ag-grid: browserDatePicker is specified to true, but it is not supported in IE 11, reverting to plain text date picker');\n            } else {\n                (this.eDateInput.getInputElement() as HTMLInputElement).type = 'date';\n            }\n        }\n\n        this.listener = params.onDateChanged;\n\n        this.addDestroyableEventListener(this.eDateInput.getInputElement(), 'input', (e) => {\n            if (e.target !== document.activeElement) { return; }\n            this.listener();\n        });\n    }\n\n    public getDate(): Date {\n        return _.getDateFromString(this.eDateInput.getValue());\n    }\n\n    public setDate(date: Date): void {\n        this.eDateInput.setValue(_.serializeDateToYyyyMmDd(date, \"-\"));\n    }\n\n    public setInputPlaceholder(placeholder: string): void {\n        this.eDateInput.setInputPlaceholder(placeholder);\n    }\n\n}\n"]}